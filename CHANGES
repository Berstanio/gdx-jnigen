[3.0.0]
- [FEATURE] Automatic java jnigen code generation from header files. https://github.com/libgdx/gdx-jnigen/pull/75
- [BREAKING CHANGE] packages renamed to com.badlogic.gdx.jnigen base https://github.com/libgdx/gdx-jnigen/issues/60
- [BREAKING CHANGE] Gradle tasks for building have all changed.
- Ant removed, tools chains and packaging handled entirely by jnigen
- Multi threading support in compilation
- Gradle plugin auto configures natives artifacts for publishing to maven
- GHA gradle task, for auto generating GHA script to build natives on GH based on current configuration
- Ability to configure each platform, each abi, each slice independently.
- MSVC support added for building with MSVC tool chains on windows

[2.5.2]
- [BREAKING CHANGE] Increased default `minIOSVersion` to iOS 12. Default can be overridden with `minIOSVersion = "11.0"`
- Compile all files that are defined by cIncludes/cExcludes/cppIncludes/cppExcludes
- Add support for defining multiple source directories in the gradle plugin

[2.5.1]
- [BREAKING CHANGE] Missing compilers will no longer silently fail #52
- Windows ARM built target #51
- Fix regression in library loading on android #55 
- Enforce UTF-8 for java header generation #53

[2.5.0]
- [BREAKING CHANGE] Added Enum for Os/Architecture/Bitness
- Linux RISCV Support

[2.4.0]
- [BREAKING CHANGE] [iOS] Move static libraries to dynamic libraries
- [BREAKING CHANGE] [iOS] Remove armv7 slices
- [BREAKING CHANGE] [iOS] Bump minimum deployment target to 11
- [iOS] Add support for specifying `extraXCFrameworks`
- [iOS] Remove deprecated bitcode generation
- [iOS] Generate dSYM files for the frameworks

[2.3.0]
- [BREAKING CHANGE] [iOS] Added support for specifying robovm.xml `libs` and `forceLinkClasses` definitions.
- [iOS] Added support for arm64 simulators and replace use of fat static lib with xcframework, see #28
- Improve shared library load failure message on Android and ARM.

[2.2.0]
- [BREAKING CHANGE] Split macOS arm64 binaries into their own dylib.
